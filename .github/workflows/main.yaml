name: Flutter Build

on:
  workflow_dispatch:
  push:
    branches: ['deploy','main']
  pull_request:
    branches: [ "deploy" ]

jobs:
   android:
      runs-on: ubuntu-latest
      steps:
        - name: Clone repository
          uses: actions/checkout@v4
        - name: Set up Java 17
          uses: actions/setup-java@v4
          with:
            distribution: 'zulu' # You can use 'zulu' or 'adopt' based on your preference
            java-version: '17'
        - name: Verify Java version
          run: java -version
        - name: Set up Flutter
          uses: subosito/flutter-action@v2
          with:
            flutter-version: 3.19.2
        - run: flutter pub get
        - run: flutter build apk
        - name: Upload artifact
          uses: actions/upload-artifact@v4
          with:
            name: android-apk
            path: build/app/outputs/flutter-apk/app-release.apk
        - run: flutter build appbundle
        - name: Upload artifact
          uses: actions/upload-artifact@v4
          with:
            name: android-appbundle
            path: build/app/outputs/bundle/release/

   ios:
     runs-on: macos-latest
     steps:
       - name: Clone repository
         uses: actions/checkout@v4
       - name: Set up Flutter
         uses: subosito/flutter-action@v2
         with:
           flutter-version: 3.19.2
       - name: Install flutter dependencies
         run: flutter pub get
       - name: Install ios Dependencies
         run: |
           cd ios
           pod install --repo-update
           cd ..
         shell: bash
       - name: build ipa
         uses: heiha100/action-flutter-build-ios@main
         with:
           # always use --export-options-plist=ios/GithubActionsExportOptions.plist
           build-cmd: flutter build ipa --release --export-options-plist=ios/GithubActionsExportOptions.plist
           certificate-base64: ${{ secrets.IOS_DISTRIBUTE_CERTIFICATION }}
           certificate-password: ${{ secrets.IOS_DISTRIBUTE_PASSWORD }}
           provisioning-profile-base64: ${{ secrets.IOS_DISTRIBUTE_PROVISION_PROFILE }}
           extension-provisioning-profile-base64: ${{ secrets.IOS_DISTRIBUTE_SHARE_EXTENSION_PROVISION_PROFILE }}
           keychain-password: ${{ secrets.IOS_DISTRIBUTE_PASSWORD }}
       - name: Upload artifact
         uses: actions/upload-artifact@v4
         with:
           name: release-ipa
           path: build/ios/ipa/App.ipa

   linux-deb:
     runs-on: ubuntu-latest
     container:
       image: registry.cn-hangzhou.aliyuncs.com/tekton/linux-flutter-build:ubuntu-22.04-amd64
     steps:
       - name: Clone repository
         uses: actions/checkout@main
       - name: install rust
         run: curl --proto '=https' --tlsv1.2 https://sh.rustup.rs -sSf > rustup.sh && sh rustup.sh -y && echo 'source $HOME/.cargo/env' >> /etc/bash.bashrc
       - run: flutter pub get
       - run: flutter build linux -vv
         name: flutter debug compile
       - run: flutter_distributor package --platform linux --targets deb
       - name: Upload artifact
         uses: actions/upload-artifact@v4
         with:
           name: linux-deb
           path: dist/

   linux-rpm:
     runs-on: ubuntu-latest
     container:
       image: registry.cn-hangzhou.aliyuncs.com/tekton/linux-flutter-build:fedora-38-amd64
     steps:
       - name: Clone repository
         uses: actions/checkout@main
       - name: install rust
         run: curl --proto '=https' --tlsv1.2 https://sh.rustup.rs -sSf > rustup.sh && sh rustup.sh -y && echo 'source $HOME/.cargo/env' >> /etc/bash.bashrc
       - run: flutter pub get
       - run: flutter build linux -vv
         name: flutter debug compile
       - run: flutter_distributor package --platform linux --targets rpm
       - name: Upload artifact
         uses: actions/upload-artifact@v4
         with:
           name: linux-rpm
           path: dist/

   windows:
    runs-on: windows-latest
    steps:
     - name: Clone repository
       uses: actions/checkout@v4
     - name: Set up Flutter
       uses: subosito/flutter-action@v2
       with:
         flutter-version: 3.19.2
     - run: dart run make windows
     - name: Upload artifact
       uses: actions/upload-artifact@v4
       with:
         name: windows
         path: ./scripts/Installer/publish

   macos:
     runs-on: macos-latest
     steps:
       - name: Clone repository
         uses: actions/checkout@v4
       - name: Set up Flutter
         uses: subosito/flutter-action@v2
         with:
           channel: stable
       - run: flutter build macos
       - name: Upload artifact
         uses: actions/upload-artifact@v4
         with:
           name: macos
           path: build/macos/Build/Products/Release/
